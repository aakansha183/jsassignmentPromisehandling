async function conditionalChaining(initialUrl, secondaryUrl1, secondaryUrl2) {
    try {
        const initialResponse = await fetch(initialUrl);
        if (!initialResponse.ok) {
            throw new Error(`HTTP error! Status: ${initialResponse.status} for URL: ${initialUrl}`);
        }
        const initialData = await initialResponse.json();

        let secondaryUrl;
        if (someCondition(initialData)) {
            secondaryUrl = secondaryUrl1;
        } else {
            secondaryUrl = secondaryUrl2;
        }

        const secondaryResponse = await fetch(secondaryUrl);
        if (!secondaryResponse.ok) {
            throw new Error(`HTTP error! Status: ${secondaryResponse.status} for URL: ${secondaryUrl}`);
        }
        const secondaryData = await secondaryResponse.json();

        return secondaryData;

    } catch (error) {
        console.error('Error fetching data:', error.message);
        throw error;
    }
}

function someCondition(data) {
    return data.someProperty === 'someValue';
}

const initialUrl = ' https://jsonplaceholder.typicode.com/posts/1';
const secondaryUrl1 = ' https://jsonplaceholder.typicode.com/posts/2';
const secondaryUrl2 = ' https://jsonplaceholder.typicode.com/posts/3';

conditionalChaining(initialUrl, secondaryUrl1, secondaryUrl2)
    .then(data => console.log('Final data:', data))
    .catch(error => console.error('Final error:', error.message));
