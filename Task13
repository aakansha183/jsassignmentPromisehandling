async function fetchWithFallback(urls) {
    const results = [];
    const errors = [];

    await Promise.all(urls.map(async (url) => {
        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status} for URL: ${url}`);
            }
            const data = await response.json();
            results.push(data);
        } catch (error) {
            errors.push(error.message);
            console.error(`Error fetching from ${url}: ${error.message}`);
        }
    }));

    if (results.length === 0) {
        throw new Error(`All fetches failed: ${errors.join(', ')}`);
    }

    return results;
}

const urls = [
    'https://jsonplaceholder.typicode.com/posts/1',
    'https://jsonplaceholder.typicode.com/posts/invalid', 
    'https://jsonplaceholder.typicode.com/posts/3'
];

fetchWithFallback(urls)
    .then(results => console.log('Fetched data:', results))
    .catch(error => console.error('Final error:', error.message));
